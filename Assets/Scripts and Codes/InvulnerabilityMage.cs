using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class InvulnerabilityMage : MonoBehaviour
{
    public Image invulnerable;
    public PlayerMovementNinja moveSpeedNormal = new PlayerMovementNinja();
    public Animator animator;
    private bool isInvulnerable = false;
    private bool isCooldownInvuln = false;
    private float invulnerabelCooldown = 6f;
    private float ignoreCollisionOverTime = 3f;
    void Start()
    {
        invulnerable.fillAmount = 0;
    }
    void Update()
    {
        if (Input.GetKeyDown(KeyCode.F) && isCooldownInvuln == false)
        {
            isCooldownInvuln = true;
            invulnerable.fillAmount = 1;
            StartCoroutine(GetInvulnerable());
            FindObjectOfType<AudioManager>().Play("NoNoMage");
        }
        if (isCooldownInvuln)
        {
            invulnerable.fillAmount -= 1 / invulnerabelCooldown * Time.deltaTime;
            if (invulnerable.fillAmount <= 0)
            {
                invulnerable.fillAmount = 0;
                isCooldownInvuln = false;
            }
        }
    }
    IEnumerator GetInvulnerable()
    {
        Physics2D.IgnoreLayerCollision(10, 17, true);
        Physics2D.IgnoreLayerCollision(10, 14, true);
        Physics2D.IgnoreLayerCollision(10, 18, true);
        Physics2D.IgnoreLayerCollision(10, 15, true);
        Physics2D.IgnoreLayerCollision(10, 16, true);
        Physics2D.IgnoreLayerCollision(10, 20, true);
        moveSpeedNormal.normalMovementSpeed = 0f;
        isInvulnerable = true;
        animator.SetBool("IsInvulnerable", isInvulnerable);
        yield return new WaitForSeconds(ignoreCollisionOverTime);
        moveSpeedNormal.normalMovementSpeed = 200f;
        isInvulnerable = false;
        animator.SetBool("IsInvulnerable", isInvulnerable);
        Physics2D.IgnoreLayerCollision(10, 17, false);
        Physics2D.IgnoreLayerCollision(10, 14, false);
        Physics2D.IgnoreLayerCollision(10, 18, false);
        Physics2D.IgnoreLayerCollision(10, 15, false);
        Physics2D.IgnoreLayerCollision(10, 16, false);
        Physics2D.IgnoreLayerCollision(10, 20, false);
    }
}